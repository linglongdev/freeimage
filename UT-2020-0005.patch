From a8d25b477f2f64ecbfe33fb63ee418891e07bf1a Mon Sep 17 00:00:00 2001
From: liuminghang <liuminghang@uniontech.com>
Date: Wed, 23 Dec 2020 10:23:22 +0800
Subject: [PATCH] fix: resolve bug UT-2020-0005

Description:

Log:
Bug:
Issue:
Task:
Change-Id: Ic4babdc622249c6260c2f14d209a4f5a9efd1dcf
---
 Source/FreeImage/PSDParser.cpp | 44 +++++++++++++++++++++++-----------
 1 file changed, 30 insertions(+), 14 deletions(-)

diff --git a/Source/FreeImage/PSDParser.cpp b/Source/FreeImage/PSDParser.cpp
index 5865216..3397f2c 100644
--- a/Source/FreeImage/PSDParser.cpp
+++ b/Source/FreeImage/PSDParser.cpp
@@ -1468,20 +1468,36 @@ FIBITMAP* psdParser::ReadImageData(FreeImageIO *io, fi_handle handle) {
 	switch ( nCompression ) {
 		case PSDP_COMPRESSION_NONE: // raw data
 		{
-			for(unsigned c = 0; c < nChannels; c++) {
-				if(c >= dstChannels) {
-					// @todo write extra channels
-					break;
-				}
-
-				const unsigned channelOffset = GetChannelOffset(bitmap, c) * bytes;
-
-				BYTE* dst_line_start = dst_first_line + channelOffset;
-				for(unsigned h = 0; h < nHeight; ++h, dst_line_start -= dstLineSize) {//<*** flipped
-					io->read_proc(line_start, lineSize, 1, handle);
-					ReadImageLine(dst_line_start, line_start, lineSize, dstBpp, bytes);
-				} //< h
-			}//< ch
+            if (dstBpp == 1 && bytes != 4 && bytes != 2 && nChannels > 0) {
+                for (unsigned c = 0; c < nChannels; c++) {
+                    if (c >= dstChannels) {
+                        // @todo write extra channels
+                        break;
+                    }
+                    const unsigned channelOffset = GetChannelOffset(bitmap, c) * bytes;
+                    BYTE* dst_line_start = dst_first_line + channelOffset;
+                    for (unsigned h = 0; h < nHeight; ++h, dst_line_start -= dstLineSize) {//<*** flipped
+                        io->read_proc(line_start, dstLineSize, 1, handle);
+                        ReadImageLine(dst_line_start, line_start, dstLineSize, dstBpp, bytes);
+                    } //< h
+                }//< ch
+            }
+            else {
+                for (unsigned c = 0; c < nChannels; c++) {
+                    if (c >= dstChannels) {
+                        // @todo write extra channels
+                        break;
+                    }
+
+                    const unsigned channelOffset = GetChannelOffset(bitmap, c) * bytes;
+
+                    BYTE* dst_line_start = dst_first_line + channelOffset;
+                    for (unsigned h = 0; h < nHeight; ++h, dst_line_start -= dstLineSize) {//<*** flipped
+                        io->read_proc(line_start, lineSize, 1, handle);
+                        ReadImageLine(dst_line_start, line_start, lineSize, dstBpp, bytes);
+                    } //< h
+                }//< ch
+            }
 
 			SAFE_DELETE_ARRAY(line_start);
 
-- 
2.20.1

